group 'com.bitjourney.plantuml'
version '1.4.5'

final MainClassName = "${group}.Main"

// See
// http://plantuml.com/changes
// https://search.maven.org/artifact/net.sourceforge.plantuml/plantuml
final PlantUmlVersion = "1.2023.2"

final ArchiveName = "plantuml-service.jar"

buildscript {
    // https://kotlinlang.org/
    ext.kotlin_version = '1.8.10'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'kotlin'

compileKotlin {
    kotlinOptions.jvmTarget = "17"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "17"
}

dependencies {
    implementation "net.sourceforge.plantuml:plantuml:$PlantUmlVersion"
    implementation "com.sparkjava:spark-core:2.9.4"
    implementation "org.slf4j:slf4j-simple:2.0.6"
    implementation "com.google.code.gson:gson:2.10.1"
    implementation "com.github.ben-manes.caffeine:caffeine:3.1.4"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.assertj:assertj-core:3.24.2'
}
repositories {
    mavenCentral()
}

jar {
    archiveName ArchiveName
    manifest {
        attributes(
                "Main-Class": MainClassName,
                "Specification-Version": PlantUmlVersion,
                "Implementation-Title": "plantuml-service",
                "Implementation-Version": version,
                "Implementation-Vendor": "BitJourney, Inc."
        )
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

task stage(type: Copy, dependsOn: jar) {
    from file("build/libs/${ArchiveName}")
    into file("bin/")
}

if (new File(System.getenv("HOME"), ".github").exists()) {
    ext.githubOwner = "bitjourney"
    ext.githubRepo = "plantuml-service"
    ext.artifactFile = file("bin/plantuml-service.jar")
    ext.artifactContentType = "application/java-archive"
    ext.version = version

    apply from: './release.gradle'
}
